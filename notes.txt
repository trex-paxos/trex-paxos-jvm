# tests
mvn clean package

npx repomix@latest --include "README.md,trex-lib/src/main/**"

npx repomix@latest

# run just one test
mvn -DskipTests clean package && \
    mvn test -Dtest=PickleHandshakeTest -pl trex-paxe

# just run subpackage tests
mvn -DskipTests clean install && \
    mvn test -pl trex-paxe

# run just one test method
mvn test -pl trex-paxe -Dtest=com.github.trex_paxos.paxe.PaxeNetworkTest#testStartup

# run just one test fine logging
clear ; mvn test -Dtest=com.github.trex_paxos.paxe.PaxeNetworkTest#testStartup -Djava.util.logging.ConsoleHandler.level=FINEST

# run just one test class fine logging
clear ; mvn test -pl trex-paxe -Dtest=com.github.trex_paxos.paxe.PaxeNetworkTest -Djava.util.logging.ConsoleHandler.level=FINEST

# Grab the files for LLM

rm all.java;
find trex-lib/src trex-paxe/src -name \*.java | while read JAVA ; do echo "" >> all.java; \
    echo $JAVA >> all.java; \
    cat $JAVA >> all.java ;\
    done;

# jshell

jshell --enable-preview --class-path ./trex-locks/target/classes:./trex-locks/target/test-classes:./trex-lib/target/classes:./trex-lib/target/test-classes

```
jshell> import com.github.trex_paxos.*
jshell> var stack = new StackClusterImpl() // Give it a moment to elect a leader
jshell> stack.push("hello") 
jshell> stack.push("world")
jshell> stack.peek()
jshell> stack.peek()
jshell> stack.pop()
jshell> stack.pop()
jshell> stack.pop()
jshell> stack.shutdown()
```
